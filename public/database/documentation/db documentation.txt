Base API Url: "https://marlonfajardo.ca/karma/v1"



------- SENDING / RETRIEVING API DATA -------

1) Every time we send or retrieve data from the api, we use this function
    * Copy APIRequest() and BASE_RUL into the javascript file you are using

        const BASE_URL = "https://marlonfajardo.ca/karma/v1"; // global variable
        function APIRequest(method, url) {
            console.log(method + ": " + url);
            const xhttp = new XMLHttpRequest();
            xhttp.open(method, url, true);
            xhttp.send();
            xhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    let result = JSON.parse(this.responseText);
                    console.log(result);
                    return result;
                }
            }
        }


2)  Next, create a function that calls APIRequest
    Use the API DOCUMENTATION to fill out this function:

        function function_name(parameters) {
            const method = METHOD;
            const endpoint = ENDPOINT;
            const params = formatParams({
                "param_name": parameters
            });
            const url = BASE
        }

    * EXAMPLE: creating a new profile (#3 in API DOCUMENTATION) 

        function createNewProfile(userID, fullname, isVolunteer) {
            const method = "POST";
            const endpoint = "/profiles";
            const params = formatParams({
                "id": userID,
                "name": fullname,
                "isVolunteer": isVolunteer
            });
            const url = BASE_URL + endpoint + params;

            APIRequest(method, url);
        }


3)  Testing isn't possible if it isn't hosted, so just put it in the #homework-help
    discord channel and @ Marlon for him to test






------------- API DOCUMENTATION -------------


DOCUMENTATION FORMAT
#)  CATEGORY: Description
    Additional Details
    
    ENDPOINT:   /endpoint

    METHOD:     METHOD

    PARAMS:
        param_name      datatype: Param description

    Example URL of the request (replace 'value' with an actual value):
        https://marlonfajardo.ca/karma/v1



1)  SOCIAL POSTS: Get social feed (site-wide)
    For viewing all the posts from every user.
    
    ENDPOINT:   /posts

    METHOD:     GET

    PARAMS:
        NONE


2)  SOCIAL POSTS: Get social feed (user-specific)
    For viewing all the posts made by people that the current user is following.

    ENDPOINT:   /posts/{id}
    
    METHOD:     GET

    PARAMS:
        id          string: The current username

    Example URL of the request (replace 'name' with an actual value):
        https://marlonfajardo.ca/karma/v1/posts/name


3)  PROFILE: Create a new blank profile with a blank education, experience, skill, etc.
    This is the function that would be used when a user signs up.
    
    ENDPOINT:   /profiles

    METHOD:     POST

    PARAMS:
        id          string: The username from firebase
        name        string: The full name from firebase
        isVolunteer boolean: Volunteer = 1, Organization = 0

    Example URL of the request (replace 'value' with an actual value):
        https://marlonfajardo.ca/karma/v1/profiles?id=value&name=value&isVolunteer=value


4)  PROFILE: Get all profile info for a single user
    Retrieves all profile info linked to a user (education, skills, experience, etc.)

    ENDPOINT:   /profiles/{id}
    
    METHOD:     GET

    PARAMS:
        id          string: The current username

    Example URL of the request (replace 'name' with an actual value):
        https://marlonfajardo.ca/karma/v1/profiles/name    


5)  PROFILE: Add skill to user profile
    For adding an existing or a new skill to a user's profile

    ENDPOINT:   /profiles/skills 

    METHOD:     PUT

    PARAMS:
        id          string: The current username
        skill       string: The new/existing skill to add to profile

    Example URL of the request (replace 'value' with an actual value):
        https://marlonfajardo.ca/karma/v1/profiles/skills?id=value&skill=value


6)  PROFILE: Remove skill from user profile
    For removing a skill from a user's profile

    ENDPOINT:   /profiles/skills

    METHOD:     DELETE

    PARAMS:
        id          string: The current username
        skill       string: The skill to remove from the profile

    Example URL of the request (replace 'value' with an actual value):
        https://marlonfajardo.ca/karma/v1/profiles/skills?id=value&skill=value


7)  PROFILE: Create a new education entry to a user's profile
    For adding a new education entry for a user's profile

    ENDPOINT:   /profiles/education

    METHOD:     POST

    PARAMS:
        id          string: The current username
        start       string: The education start date format MM-YYYY
        end         string: The education end date format MM-YYYY
        gpa         decimal: The gpa received (If none, just input 0.0)
        type        string: The type of certification earned (ex. Diploma, Degree, etc.)
        img         string: The url of the image of school (ex. www.website.ca/image.jpg)
        name        string: The name of the school/institution

    Example URL of the request (replace 'value' with an actual value):
        https://marlonfajardo.ca/karma/v1/profiles/education?id=value&start=value&end=value&gpa=value&type=value&img=value&name=value

    
8)  PROFILE: Edit an existing educaiton entry to a user's profile
    For editing an education entry that can include old and new information.

    ENDPOINT:   /profiles/education

    METHOD:     PUT

    PARAMS:
        id          integer: The current education id (in the database)
        start       string: The education start date format MM-YYYY
        end         string: The education end date format MM-YYYY
        gpa         decimal: The gpa received (If none, just input 0.0)
        type        string: The type of certification earned (ex. Diploma, Degree, etc.)
        img         string: The url of the image of school (ex. www.website.ca/image.jpg)
        name        string: The name of the school/institution

    Example URL of the request (replace 'value' with an actual value):
        https://marlonfajardo.ca/karma/v1/profiles/education?id=value&start=value&end=value&gpa=value&type=value&img=value&name=value


9)  PROFILE: Create a new experience entry to a user's profile
    For adding a new experience entry for a user's profile
    
    ENDPOINT:   /profiles/experience

    METHOD:     POST

    PARAMS:
        id          string: The current username
        start       string: The experience start date format MM-YYYY
        end         string: The experience end date format MM-YYYY
        job         string: The title of the postition (ex. Sales Associate)
        img         string: The url of the image of work (ex. www.website.ca/image.jpg)
        employer    string: The name of the workplace/institution

    Example URL of the request (replace 'value' with an actual value):
        https://marlonfajardo.ca/karma/v1/profiles/experience?id=value&start=value&end=value&job=value&img=value&employer=value



10) PROFILE: Edit an existing experience entry to a user's profile
    For editing an education entry that can include old and new information.
    
    ENDPOINT:   /profiles/experience

    METHOD:     PUT

    PARAMS:
        id          integer: The current experience id (in the database)
        start       string: The experience start date format MM-YYYY
        end         string: The experience end date format MM-YYYY
        job         string: The title of the postition (ex. Sales Associate)
        img         string: The url of the image of work (ex. www.website.ca/image.jpg)
        employer    string: The name of the workplace/institution

    Example URL of the request (replace 'value' with an actual value):
        https://marlonfajardo.ca/karma/v1/profiles/experience?id=value&start=value&end=value&job=value&img=value&employer=value


11) PROFILE: Create a new award/certificate entry to a user's profile
    For adding a new award/certificate entry for a user's profile
    
    ENDPOINT:   /profiles/awardsAndCertification

    METHOD:     POST

    PARAMS:
        id          string: The current username
        title       string: The title of the award/certificate
        date        string: The date received format MM-YYYY
        img         string: The url of the image of award (ex. www.website.ca/image.jpg)

    Example URL of the request (replace 'value' with an actual value):
        https://marlonfajardo.ca/karma/v1/profiles/awardsAndCertification?id=value&title=value&date=value&img=value


12) PROFILE: Edit an existing award/certificate entry to a user's profile
    For editing an award/certificate entry that can include old and new information.
    
    ENDPOINT:   /profiles/awardsAndCertification

    METHOD:     PUT

    PARAMS:
        id          integer: The current award/certificate id (in the database)
        title       string: The title of the award/certificate
        date        string: The date received format MM-YYYY
        img         string: The url of the image of award (ex. www.website.ca/image.jpg)

    Example URL of the request (replace 'value' with an actual value):
        https://marlonfajardo.ca/karma/v1/profiles/awardsAndCertification?id=value&title=value&date=value&img=value


13) PROFILE: Edit a user's profile pic
    Changes the user's profiel pic url to a url
    
    ENDPOINT:   /profiles/picture

    METHOD:     PUT

    PARAMS:
        id          string: The current username
        picUrl      string: The new pic url (ex. www.website.ca/image.jpg)

    Example URL of the request (replace 'value' with an actual value):
        https://marlonfajardo.ca/karma/v1/profiles/bio?id=value&bio=value


14) PROFILE: Edit a user's bio
    Changes the user's bio to a given message
    
    ENDPOINT:   /profiles/bio

    METHOD:     PUT

    PARAMS:
        id          string: The current username
        bio         string: The new bio (no character limit)

    Example URL of the request (replace 'value' with an actual value):
        https://marlonfajardo.ca/karma/v1/profiles/bio?id=value&bio=value


15) PROFILE: Makes a request to follow a user
    Creates a new request to follow a user
    
    ENDPOINT:   /profiles/followers

    METHOD:     POST

    PARAMS:
        follower    string: The username of the person requesting to follow
        id          string: The username of the person being followed

    Example URL of the request (replace 'value' with an actual value):
        https://marlonfajardo.ca/karma/v1/profiles/followers?id=value&follower=value


16) PROFILE: Accepts a request to follow a user
    Changes follow request of a user to accepted
    
    ENDPOINT:   /profiles/followers

    METHOD:     PUT

    PARAMS:
        follower    string: The username of the person requesting to follow
        id          string: The username of the person being followed

    Example URL of the request (replace 'value' with an actual value):
        https://marlonfajardo.ca/karma/v1/profiles/followers?id=value&follower=value


17) PROFILE: Unfollows a user
    Deletes the follow entry of a user
    
    ENDPOINT:   /profiles/followers

    METHOD:     DELETE

    PARAMS:
        follower    string: The username of the person unfollowing
        id          string: The username of the person being unfollowed

    Example URL of the request (replace 'value' with an actual value):
        https://marlonfajardo.ca/karma/v1/profiles/followers?id=value&follower=value


18) PROFILE: Gets the list of followers of a user
    Gets all the the users that follow the current user
    
    ENDPOINT:   /profiles/followers/{id}

    METHOD:     METHOD

    PARAMS:
        param_name      datatype: Param description

    Example URL of the request (replace 'value' with an actual value):
        https://marlonfajardo.ca/karma/v1/profiles/followers/value


19) PROFILE: Gets the list of followings of a user
    Gets all the the users that the current user follows
    
    ENDPOINT:   /profiles/following/{id}

    METHOD:     METHOD

    PARAMS:
        param_name      datatype: Param description

    Example URL of the request (replace 'value' with an actual value):
        https://marlonfajardo.ca/karma/v1/profiles/followers/value


20) PROFILE: Get all users (search for other users)
    Returns a list of users including their full name, username, profile pic url, and profile id 

    ENDPOINT:   /profiles/{id}
    
    METHOD:     GET

    PARAMS:
        NONE

    Example URL of the request (replace 'name' with an actual value):
        https://marlonfajardo.ca/karma/v1/profiles


21) BULLETIN BOARD: View all opportunites
    Gets a list of all opportunities sorted by category
    
    ENDPOINT:   /opportunities

    METHOD:     GET

    PARAMS:
        NONE

    Example URL of the request (replace 'value' with an actual value):
        https://marlonfajardo.ca/karma/v1/opportunities


21) BULLETIN BOARD: Creates a new opportunity
    Creates a new volunteer opportunity with all needed details
    
    ENDPOINT:   /opportunities

    METHOD:     POST

    PARAMS:
        id          string: The current username
        category    string: The category of the opportunity
        date        string: The day the event takes place format YYY-MM-DD
        title       string: The job title
        desc        string: The job description
        requires    string: The requirements of the job
        img         string: The image url of the opportunity (ex. www.website.ca/image.jpg)

    Example URL of the request (replace 'value' with an actual value):
        https://marlonfajardo.ca/karma/v1/opportunities


22) MESSAGES: View messages in a conversation
    Gets the list of messages for a single conversation
    
    ENDPOINT:   /messages/{id}/{convo}

    METHOD:     GET

    PARAMS:
        id          string: The current username
        convo       string: The id of the conversation (in the database)

    Example URL of the request (replace 'value' with an actual value):
        https://marlonfajardo.ca/karma/v1/messages/value/value


23) MESSAGES: View list of conversations.
    Gets the list of all conversations that a user has
    
    ENDPOINT:   /messages

    METHOD:     GET

    PARAMS:
        id          string: The current username

    Example URL of the request (replace 'value' with an actual value):
        https://marlonfajardo.ca/karma/v1/messages?id=value
    

24) MESSAGES: Send another user a message
    Sends a message from the current user to another given user
    
    ENDPOINT:   /messages

    METHOD:     POST

    PARAMS:
        id          string: The current username
        receiver    string: The username of person receiving messsage
        msg         string: The actual message being sent

    Example URL of the request (replace 'value' with an actual value):
        https://marlonfajardo.ca/karma/v1/messages?id=value&receiver=value&msg=value


25) SOCIAL POSTS: Like a post
    Like a social post.

    ENDPOINT:   /post/like
    
    METHOD:     POST

    PARAMS:
        id          string: The current username
        post        integer: The post id of the post being liked (in the database)

    Example URL of the request (replace 'name' with an actual value):
        https://marlonfajardo.ca/karma/v1/post/like?id=value&post=value


26) SOCIAL POSTS: Unlike a post
    Deletes your like from a post.

    ENDPOINT:   /post/like
    
    METHOD:     DELETE

    PARAMS:
        id          string: The current username
        post        integer: The post id of the post being liked (in the database)

    Example URL of the request (replace 'name' with an actual value):
        https://marlonfajardo.ca/karma/v1/post/like?id=value&post=value



27) SOCIAL POSTS: Creates a comment on a post
    Adds a new comment to a social post

    ENDPOINT:   /post/comment
    
    METHOD:     POST

    PARAMS:
        id          string: The current username
        post        integer: The post id of the post being liked (in the database)
        msg         string: The comment the user is making

    Example URL of the request (replace 'name' with an actual value):
        https://marlonfajardo.ca/karma/v1/post/comment?id=value&post=value&msg=value


28) SOCIAL POSTS: Deletes a comment from a post
    Deletes an existing comment from a social post

    ENDPOINT:   /post/comment
    
    METHOD:     DELETE

    PARAMS:
        id          string: The id of the comment (in the database)

    Example URL of the request (replace 'name' with an actual value):
        https://marlonfajardo.ca/karma/v1/post/comment?id=value


    
